<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liaoin.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.liaoin.entity.Product">
    <id column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
      <!--1对多关系映射-->
      <collection property="productLists" ofType="com.liaoin.entity.ProductList">
          <id column="productlist_id" jdbcType="INTEGER" property="productListId"/>
          <result column="productlist_name" jdbcType="VARCHAR" property="productListName" />
          <result column="product_id" jdbcType="INTEGER" property="productId" />
          <result column="productlist_price" jdbcType="DOUBLE" property="productListPrice" />
          <result column="productlist_details" jdbcType="VARCHAR" property="productListDetails" />
          <result column="productlist_rep" jdbcType="VARCHAR" property="productListRep" />
          <result column="productlist_hot" jdbcType="VARCHAR" property="productListHot" />
          <result column="productlist_picture" jdbcType="VARCHAR" property="productListPicture"/>
      </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_id, product_name
  </sql>
  <select id="selectByExample" parameterType="com.liaoin.entity.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `product`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from `product`
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <select id="getProductById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
     select productlist_name,productlist_price,product_name from product p left outer join productlist t  on p.product_id=t.product_id
        where p.product_id=#{productId}
  </select>
  <select id="selectProduct" parameterType="com.liaoin.entity.Product" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `product`
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `product`
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liaoin.entity.ProductExample">
    delete from "product"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liaoin.entity.Product">
    insert into `product` ( product_name)
    values (#{productName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liaoin.entity.Product">
    insert into "product"
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liaoin.entity.ProductExample" resultType="java.lang.Long">
    select count(*) from "product"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update "product"
    <set>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update "product"
    set product_id = #{record.productId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liaoin.entity.Product">
    update "product"
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liaoin.entity.Product">
    update `product`
    set product_name = #{productName,jdbcType=VARCHAR}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>
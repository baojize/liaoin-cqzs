<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liaoin.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.liaoin.entity.User">
    <!--用户信息-->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_mobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <!-- 用户购买的订单信息,一个用户对应多个订单，使用collection -->
    <collection property="orderList" ofType="com.liaoin.entity.Order">
      <id column="order_id" jdbcType="VARCHAR" property="orderId" />
      <result column="note" jdbcType="VARCHAR" property="note" />
      <result column="num" jdbcType="DECIMAL" property="num" />
      <result column="user_id" jdbcType="INTEGER" property="userId" />
      <result column="creattime" jdbcType="TIMESTAMP" property="creattime" />
      <!-- 订单明细，一个订单有多个订单明细 -->
      <collection property="orderOptions" ofType="com.liaoin.entity.OrderOption">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="num" jdbcType="INTEGER" property="num" />
        <result column="productlist_id" jdbcType="INTEGER" property="productlistId" />
        <result column="order_id" jdbcType="INTEGER" property="orderId" />
        <!-- 商品，一个订单明细对应一个商品 -->
        <association property="productLists" javaType="com.liaoin.entity.ProductList">
          <id column="productlist_id" jdbcType="INTEGER" property="productListId"/>
          <result column="productlist_name" jdbcType="VARCHAR" property="productListName" />
          <result column="product_id" jdbcType="INTEGER" property="productId" />
          <result column="productlist_price" jdbcType="DOUBLE" property="productListPrice" />
          <result column="productlist_details" jdbcType="VARCHAR" property="productListDetails" />
          <result column="productlist_rep" jdbcType="VARCHAR" property="productListRep" />
          <result column="productlist_hot" jdbcType="VARCHAR" property="productListHot" />
          <result column="productlist_picture" jdbcType="VARCHAR" property="productListPicture"/>
        </association>
      </collection>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_mobile, user_name, user_password, image_id
  </sql>
  <select id="selectByExample" parameterType="com.liaoin.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from "user"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from "user"
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from "user"
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liaoin.entity.UserExample">
    delete from "user"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liaoin.entity.User">
    insert into "user" (user_id, user_mobile, user_name, 
      user_password, image_id)
    values (#{userId,jdbcType=INTEGER}, #{userMobile,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{imageId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liaoin.entity.User">
    insert into "user"
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userMobile != null">
        user_mobile,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="imageId != null">
        image_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="imageId != null">
        #{imageId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liaoin.entity.UserExample" resultType="java.lang.Long">
    select count(*) from "user"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update "user"
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userMobile != null">
        user_mobile = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.imageId != null">
        image_id = #{record.imageId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update "user"
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_mobile = #{record.userMobile,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      image_id = #{record.imageId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liaoin.entity.User">
    update "user"
    <set>
      <if test="userMobile != null">
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="imageId != null">
        image_id = #{imageId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liaoin.entity.User">
    update "user"
    set user_mobile = #{userMobile,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      image_id = #{imageId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <!-- 查询用户和购买的商品信息，使用resultMap -->
<select id="findUserAndProductList" resultMap="BaseResultMap">
  SELECT  `order`.order_id,`order`.creattime creattime, `order`.note note,`order`.num num,
         `user`.user_mobile user_mobile,`user`.user_name user_name,`user`.user_id user_id,
         orderoption.id id, orderoption.productlist_id, orderoption.num, orderoption.order_id,
         productlist.productlist_name productlist_name,
         productlist.productlist_details productlist_details,
         productlist.productlist_price productlist_price
    FROM `order` , `user` , orderoption , productlist
    WHERE `order`.user_id = `user`.user_id
    AND orderoption.order_id = `order`.order_id
    AND productlist.productlist_id = orderoption.productlist_id
</select>
</mapper>